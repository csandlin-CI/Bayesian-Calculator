[{"/Users/csandlin/Documents/OneDrive - Compassion International/workspace/bayesian-results-app/src/index.js":"1","/Users/csandlin/Documents/OneDrive - Compassion International/workspace/bayesian-results-app/src/App.js":"2","/Users/csandlin/Documents/OneDrive - Compassion International/workspace/bayesian-results-app/src/reportWebVitals.js":"3","/Users/csandlin/Documents/OneDrive - Compassion International/workspace/bayesian-results-app/src/components/API.jsx":"4","/Users/csandlin/Documents/OneDrive - Compassion International/workspace/bayesian-results-app/src/components/Home.jsx":"5","/Users/csandlin/Documents/OneDrive - Compassion International/workspace/bayesian-results-app/src/components/ApplicationViews.jsx":"6","/Users/csandlin/Documents/OneDrive - Compassion International/workspace/bayesian-results-app/src/components/ExperimentPage.jsx":"7","/Users/csandlin/Documents/OneDrive - Compassion International/workspace/bayesian-results-app/src/components/Metric.jsx":"8"},{"size":312,"mtime":1607984553585,"results":"9","hashOfConfig":"10"},{"size":747,"mtime":1608056553969,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1607708205283,"results":"12","hashOfConfig":"10"},{"size":2697,"mtime":1608230075743,"results":"13","hashOfConfig":"10"},{"size":788,"mtime":1608233394133,"results":"14","hashOfConfig":"10"},{"size":505,"mtime":1608230959287,"results":"15","hashOfConfig":"10"},{"size":2015,"mtime":1608243640548,"results":"16","hashOfConfig":"10"},{"size":376,"mtime":1608246306864,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"buqby1",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},"/Users/csandlin/Documents/OneDrive - Compassion International/workspace/bayesian-results-app/src/index.js",[],["38","39"],"/Users/csandlin/Documents/OneDrive - Compassion International/workspace/bayesian-results-app/src/App.js",[],"/Users/csandlin/Documents/OneDrive - Compassion International/workspace/bayesian-results-app/src/reportWebVitals.js",[],"/Users/csandlin/Documents/OneDrive - Compassion International/workspace/bayesian-results-app/src/components/API.jsx",[],"/Users/csandlin/Documents/OneDrive - Compassion International/workspace/bayesian-results-app/src/components/Home.jsx",[],"/Users/csandlin/Documents/OneDrive - Compassion International/workspace/bayesian-results-app/src/components/ApplicationViews.jsx",["40","41","42"],"import React, { useContext } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { APIProvider } from \"./API\";\nimport { Home } from \"./Home\";\nimport { APIContext } from \"./API\";\nimport { ExperimentPage } from \"./ExperimentPage\";\n\nexport const ApplicationViews = () => {\n  return (\n    <>\n      <APIProvider>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n      </APIProvider>\n      <Route exact path=\"/:id\">\n        <ExperimentPage />\n      </Route>\n    </>\n  );\n};\n","/Users/csandlin/Documents/OneDrive - Compassion International/workspace/bayesian-results-app/src/components/ExperimentPage.jsx",["43","44","45"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { APIContext } from \"./API\";\nimport { useParams } from \"react-router-dom\";\nimport { Metric } from \"./Metric\";\n\nexport const ExperimentPage = () => {\n  let { id } = useParams();\n  const { singleTest, getSingleTest } = useContext(APIContext);\n  const { singleTestMeta, getSingleTestMeta } = useContext(APIContext);\n  const { bayCalc, getBayCalc } = useContext(APIContext);\n  const [metrics, setMetrics] = useState([]);\n\n  //Fetch the test results that match the id in the URL and experiment id in optimizely\n  useEffect(() => {\n    getSingleTest(id);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    getSingleTestMeta(id);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {}, [singleTest, singleTestMeta]);\n\n  // From the fetched experiment results, single out the metrics portion of the JSON and set in state\n  useEffect(() => {\n    const metrics = singleTest.metrics;\n    if (metrics !== undefined) {\n      setMetrics(metrics);\n    }\n  }, [singleTest]);\n\n  useEffect(() => {\n    console.log(\"singleTest\", singleTest);\n    console.log(\"singleTestMeta\", singleTestMeta);\n    console.log(\"metrics\", metrics);\n  }, [metrics]);\n\n  // Run through the metrics and seperate each result out\n  useEffect(() => {\n    for (let i = 0; i < metrics.length; i++) {\n      for (let key in metrics[i].results) {\n        console.log(metrics[i].name, metrics[i].results[key]);\n      }\n    }\n  }, [metrics]);\n\n  //   useEffect(() => {\n  //     getBayCalc(100, 10, 25, 100, 25, 50);\n  //     // eslint-disable-next-line react-hooks/exhaustive-deps\n  //   }, []);\n\n  //   useEffect(() => {}, [bayCalc]);\n\n  return (\n    <>\n      <h2>{singleTestMeta.name}</h2>\n      <p>ID:{id}</p>\n      <p>\n        {singleTest.length === 0 ? \"Loading...\" : ` ${singleTest.end_time}`}\n      </p>\n      {metrics.map((met, index) => {\n        return <Metric key={met.event_id + index} metricData={met} />;\n      })}\n    </>\n  );\n};\n","/Users/csandlin/Documents/OneDrive - Compassion International/workspace/bayesian-results-app/src/components/Metric.jsx",["46","47","48"],"import React, { useContext, useEffect } from \"react\";\nimport { APIContext } from \"./API\";\nimport { Link } from \"react-router-dom\";\n\nexport const Metric = ({ metricData }) => {\n  useEffect(() => {\n    console.log(\"metricData\", metricData);\n  }, [metricData]);\n  return (\n    <p>\n      {metricData.event_id !== undefined ? <>{metricData.name}</> : <>{null}</>}\n    </p>\n  );\n};\n",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":27},{"ruleId":"53","severity":1,"message":"57","line":2,"column":17,"nodeType":"55","messageId":"56","endLine":2,"endColumn":23},{"ruleId":"53","severity":1,"message":"58","line":5,"column":10,"nodeType":"55","messageId":"56","endLine":5,"endColumn":20},{"ruleId":"53","severity":1,"message":"59","line":10,"column":11,"nodeType":"55","messageId":"56","endLine":10,"endColumn":18},{"ruleId":"53","severity":1,"message":"60","line":10,"column":20,"nodeType":"55","messageId":"56","endLine":10,"endColumn":30},{"ruleId":"61","severity":1,"message":"62","line":35,"column":6,"nodeType":"63","endLine":35,"endColumn":15,"suggestions":"64"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":27},{"ruleId":"53","severity":1,"message":"58","line":2,"column":10,"nodeType":"55","messageId":"56","endLine":2,"endColumn":20},{"ruleId":"53","severity":1,"message":"65","line":3,"column":10,"nodeType":"55","messageId":"56","endLine":3,"endColumn":14},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'APIContext' is defined but never used.","'bayCalc' is assigned a value but never used.","'getBayCalc' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'singleTest' and 'singleTestMeta'. Either include them or remove the dependency array.","ArrayExpression",["68"],"'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [metrics, singleTest, singleTestMeta]",{"range":"71","text":"72"},[1237,1246],"[metrics, singleTest, singleTestMeta]"]